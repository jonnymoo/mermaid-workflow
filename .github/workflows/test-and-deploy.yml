name: Clojure CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Cache .m2 directory
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run tests
      working-directory: ./mermaid-processor
      run: |
        lein deps
        lein test

    - name: Install clj-kondo
      run: |
        mkdir -p $HOME/bin
        curl -L https://github.com/clj-kondo/clj-kondo/releases/download/v2023.10.20/clj-kondo-2023.10.20-linux-amd64.zip -o clj-kondo.zip
        sudo apt-get update
        sudo apt-get install -y unzip
        unzip clj-kondo.zip -d $HOME/bin
        chmod +x $HOME/bin/clj-kondo
        rm clj-kondo.zip

    - name: Lint with clj-kondo
      working-directory: ./mermaid-processor
      run: 
        $HOME/bin/clj-kondo --lint src

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Deploy to Clojars
      working-directory: ./mermaid-processor
      run: |
        VERSION=$(grep 'defproject' project.clj | awk '{print $3}' | tr -d "\"")
        if curl -s -o /dev/null -w "%{http_code}" https://clojars.org/com.jonnymuir/mermaid-processor/versions/$VERSION | grep 200; then
          echo "Version $VERSION already exists on Clojars. Exiting."
        else
          echo "Version $VERSION does not exist on Clojars. Continuing."
          lein uberjar
          lein deploy clojars
        fi
      env:
        LEIN_USERNAME: 'jonnymoo@hotmail.com'
        LEIN_PASSWORD: ${{ secrets.CLOJARS_DEPLOY_TOKEN }}

    - name: Build with Leiningen
      working-directory: ./mermaid-workflow-api
      run: lein uberjar 
  
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: mermaid-workflow-api # Your Azure App Service name
        publish-profile: ${{ secrets.AZURE_WEBAPPAPI_PUBLISH_PROFILE }}
        package: ./mermaid-workflow-api/target/uberjar/*-standalone.jar # The path to your built artifact
  